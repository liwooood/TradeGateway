// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tradelog.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "tradelog.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Trade {

namespace {

const ::google::protobuf::Descriptor* TradeLog_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TradeLog_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* TradeLog_LogLevel_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_tradelog_2eproto() {
  protobuf_AddDesc_tradelog_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "tradelog.proto");
  GOOGLE_CHECK(file != NULL);
  TradeLog_descriptor_ = file->message_type(0);
  static const int TradeLog_offsets_[23] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeLog, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeLog, sysno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeLog, busitype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeLog, sysver_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeLog, account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeLog, ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeLog, funcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeLog, gatewayip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeLog, gatewayport_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeLog, gtip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeLog, gtport_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeLog, countertype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeLog, recvtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeLog, sendtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeLog, begintime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeLog, runtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeLog, enc_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeLog, request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeLog, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeLog, retcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeLog, retmsg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeLog, response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeLog, enc_response_),
  };
  TradeLog_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TradeLog_descriptor_,
      TradeLog::default_instance_,
      TradeLog_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeLog, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TradeLog, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TradeLog));
  TradeLog_LogLevel_descriptor_ = TradeLog_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_tradelog_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TradeLog_descriptor_, &TradeLog::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_tradelog_2eproto() {
  delete TradeLog::default_instance_;
  delete TradeLog_reflection_;
}

void protobuf_AddDesc_tradelog_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016tradelog.proto\022\005Trade\"\201\004\n\010TradeLog\022\'\n\005"
    "level\030\005 \002(\0162\030.Trade.TradeLog.LogLevel\022\r\n"
    "\005sysNo\030\001 \002(\t\022\020\n\010busiType\030\002 \002(\t\022\016\n\006sysVer"
    "\030\003 \002(\t\022\017\n\007account\030\004 \002(\t\022\n\n\002ip\030\025 \002(\t\022\016\n\006f"
    "uncid\030\026 \002(\t\022\021\n\tgatewayip\030\006 \002(\t\022\023\n\013gatewa"
    "yport\030\007 \002(\t\022\014\n\004gtip\030\010 \002(\t\022\016\n\006gtport\030\t \002("
    "\t\022\023\n\013counterType\030\027 \002(\t\022\020\n\010recvtime\030\n \002(\t"
    "\022\020\n\010sendtime\030\r \002(\t\022\021\n\tbegintime\030\013 \002(\t\022\017\n"
    "\007runtime\030\014 \002(\003\022\023\n\013enc_request\030\016 \002(\t\022\017\n\007r"
    "equest\030\017 \002(\t\022\016\n\006status\030\020 \002(\005\022\017\n\007retcode\030"
    "\021 \002(\t\022\016\n\006retmsg\030\022 \002(\t\022\020\n\010response\030\023 \002(\t\022"
    "\024\n\014enc_response\030\024 \002(\t\"L\n\010LogLevel\022\017\n\013DEB"
    "UG_LEVEL\020\000\022\016\n\nINFO_LEVEL\020\001\022\016\n\nWARN_LEVEL"
    "\020\002\022\017\n\013ERROR_LEVEL\020\003", 539);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tradelog.proto", &protobuf_RegisterTypes);
  TradeLog::default_instance_ = new TradeLog();
  TradeLog::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_tradelog_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_tradelog_2eproto {
  StaticDescriptorInitializer_tradelog_2eproto() {
    protobuf_AddDesc_tradelog_2eproto();
  }
} static_descriptor_initializer_tradelog_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* TradeLog_LogLevel_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TradeLog_LogLevel_descriptor_;
}
bool TradeLog_LogLevel_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const TradeLog_LogLevel TradeLog::DEBUG_LEVEL;
const TradeLog_LogLevel TradeLog::INFO_LEVEL;
const TradeLog_LogLevel TradeLog::WARN_LEVEL;
const TradeLog_LogLevel TradeLog::ERROR_LEVEL;
const TradeLog_LogLevel TradeLog::LogLevel_MIN;
const TradeLog_LogLevel TradeLog::LogLevel_MAX;
const int TradeLog::LogLevel_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int TradeLog::kLevelFieldNumber;
const int TradeLog::kSysNoFieldNumber;
const int TradeLog::kBusiTypeFieldNumber;
const int TradeLog::kSysVerFieldNumber;
const int TradeLog::kAccountFieldNumber;
const int TradeLog::kIpFieldNumber;
const int TradeLog::kFuncidFieldNumber;
const int TradeLog::kGatewayipFieldNumber;
const int TradeLog::kGatewayportFieldNumber;
const int TradeLog::kGtipFieldNumber;
const int TradeLog::kGtportFieldNumber;
const int TradeLog::kCounterTypeFieldNumber;
const int TradeLog::kRecvtimeFieldNumber;
const int TradeLog::kSendtimeFieldNumber;
const int TradeLog::kBegintimeFieldNumber;
const int TradeLog::kRuntimeFieldNumber;
const int TradeLog::kEncRequestFieldNumber;
const int TradeLog::kRequestFieldNumber;
const int TradeLog::kStatusFieldNumber;
const int TradeLog::kRetcodeFieldNumber;
const int TradeLog::kRetmsgFieldNumber;
const int TradeLog::kResponseFieldNumber;
const int TradeLog::kEncResponseFieldNumber;
#endif  // !_MSC_VER

TradeLog::TradeLog()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Trade.TradeLog)
}

void TradeLog::InitAsDefaultInstance() {
}

TradeLog::TradeLog(const TradeLog& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Trade.TradeLog)
}

void TradeLog::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  level_ = 0;
  sysno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  busitype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sysver_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  funcid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gatewayip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gatewayport_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gtip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gtport_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  countertype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recvtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  begintime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  runtime_ = GOOGLE_LONGLONG(0);
  enc_request_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
  retcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retmsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enc_response_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TradeLog::~TradeLog() {
  // @@protoc_insertion_point(destructor:Trade.TradeLog)
  SharedDtor();
}

void TradeLog::SharedDtor() {
  if (sysno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sysno_;
  }
  if (busitype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete busitype_;
  }
  if (sysver_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sysver_;
  }
  if (account_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete account_;
  }
  if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ip_;
  }
  if (funcid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete funcid_;
  }
  if (gatewayip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gatewayip_;
  }
  if (gatewayport_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gatewayport_;
  }
  if (gtip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gtip_;
  }
  if (gtport_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gtport_;
  }
  if (countertype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete countertype_;
  }
  if (recvtime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete recvtime_;
  }
  if (sendtime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sendtime_;
  }
  if (begintime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete begintime_;
  }
  if (enc_request_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete enc_request_;
  }
  if (request_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete request_;
  }
  if (retcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retcode_;
  }
  if (retmsg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retmsg_;
  }
  if (response_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete response_;
  }
  if (enc_response_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete enc_response_;
  }
  if (this != default_instance_) {
  }
}

void TradeLog::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TradeLog::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TradeLog_descriptor_;
}

const TradeLog& TradeLog::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_tradelog_2eproto();
  return *default_instance_;
}

TradeLog* TradeLog::default_instance_ = NULL;

TradeLog* TradeLog::New() const {
  return new TradeLog;
}

void TradeLog::Clear() {
  if (_has_bits_[0 / 32] & 255) {
    level_ = 0;
    if (has_sysno()) {
      if (sysno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sysno_->clear();
      }
    }
    if (has_busitype()) {
      if (busitype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        busitype_->clear();
      }
    }
    if (has_sysver()) {
      if (sysver_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sysver_->clear();
      }
    }
    if (has_account()) {
      if (account_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        account_->clear();
      }
    }
    if (has_ip()) {
      if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        ip_->clear();
      }
    }
    if (has_funcid()) {
      if (funcid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        funcid_->clear();
      }
    }
    if (has_gatewayip()) {
      if (gatewayip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        gatewayip_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 65280) {
    if (has_gatewayport()) {
      if (gatewayport_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        gatewayport_->clear();
      }
    }
    if (has_gtip()) {
      if (gtip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        gtip_->clear();
      }
    }
    if (has_gtport()) {
      if (gtport_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        gtport_->clear();
      }
    }
    if (has_countertype()) {
      if (countertype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        countertype_->clear();
      }
    }
    if (has_recvtime()) {
      if (recvtime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        recvtime_->clear();
      }
    }
    if (has_sendtime()) {
      if (sendtime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sendtime_->clear();
      }
    }
    if (has_begintime()) {
      if (begintime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        begintime_->clear();
      }
    }
    runtime_ = GOOGLE_LONGLONG(0);
  }
  if (_has_bits_[16 / 32] & 8323072) {
    if (has_enc_request()) {
      if (enc_request_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        enc_request_->clear();
      }
    }
    if (has_request()) {
      if (request_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        request_->clear();
      }
    }
    status_ = 0;
    if (has_retcode()) {
      if (retcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        retcode_->clear();
      }
    }
    if (has_retmsg()) {
      if (retmsg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        retmsg_->clear();
      }
    }
    if (has_response()) {
      if (response_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        response_->clear();
      }
    }
    if (has_enc_response()) {
      if (enc_response_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        enc_response_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TradeLog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Trade.TradeLog)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sysNo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sysno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sysno().data(), this->sysno().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sysno");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_busiType;
        break;
      }

      // required string busiType = 2;
      case 2: {
        if (tag == 18) {
         parse_busiType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_busitype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->busitype().data(), this->busitype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "busitype");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sysVer;
        break;
      }

      // required string sysVer = 3;
      case 3: {
        if (tag == 26) {
         parse_sysVer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sysver()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sysver().data(), this->sysver().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sysver");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_account;
        break;
      }

      // required string account = 4;
      case 4: {
        if (tag == 34) {
         parse_account:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "account");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_level;
        break;
      }

      // required .Trade.TradeLog.LogLevel level = 5;
      case 5: {
        if (tag == 40) {
         parse_level:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Trade::TradeLog_LogLevel_IsValid(value)) {
            set_level(static_cast< ::Trade::TradeLog_LogLevel >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_gatewayip;
        break;
      }

      // required string gatewayip = 6;
      case 6: {
        if (tag == 50) {
         parse_gatewayip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gatewayip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gatewayip().data(), this->gatewayip().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "gatewayip");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_gatewayport;
        break;
      }

      // required string gatewayport = 7;
      case 7: {
        if (tag == 58) {
         parse_gatewayport:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gatewayport()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gatewayport().data(), this->gatewayport().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "gatewayport");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_gtip;
        break;
      }

      // required string gtip = 8;
      case 8: {
        if (tag == 66) {
         parse_gtip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gtip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gtip().data(), this->gtip().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "gtip");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_gtport;
        break;
      }

      // required string gtport = 9;
      case 9: {
        if (tag == 74) {
         parse_gtport:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gtport()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gtport().data(), this->gtport().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "gtport");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_recvtime;
        break;
      }

      // required string recvtime = 10;
      case 10: {
        if (tag == 82) {
         parse_recvtime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_recvtime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->recvtime().data(), this->recvtime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "recvtime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_begintime;
        break;
      }

      // required string begintime = 11;
      case 11: {
        if (tag == 90) {
         parse_begintime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_begintime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->begintime().data(), this->begintime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "begintime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_runtime;
        break;
      }

      // required int64 runtime = 12;
      case 12: {
        if (tag == 96) {
         parse_runtime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &runtime_)));
          set_has_runtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_sendtime;
        break;
      }

      // required string sendtime = 13;
      case 13: {
        if (tag == 106) {
         parse_sendtime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sendtime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sendtime().data(), this->sendtime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sendtime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_enc_request;
        break;
      }

      // required string enc_request = 14;
      case 14: {
        if (tag == 114) {
         parse_enc_request:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_enc_request()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->enc_request().data(), this->enc_request().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "enc_request");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_request;
        break;
      }

      // required string request = 15;
      case 15: {
        if (tag == 122) {
         parse_request:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->request().data(), this->request().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "request");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_status;
        break;
      }

      // required int32 status = 16;
      case 16: {
        if (tag == 128) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_retcode;
        break;
      }

      // required string retcode = 17;
      case 17: {
        if (tag == 138) {
         parse_retcode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->retcode().data(), this->retcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "retcode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_retmsg;
        break;
      }

      // required string retmsg = 18;
      case 18: {
        if (tag == 146) {
         parse_retmsg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retmsg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->retmsg().data(), this->retmsg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "retmsg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_response;
        break;
      }

      // required string response = 19;
      case 19: {
        if (tag == 154) {
         parse_response:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_response()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->response().data(), this->response().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "response");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_enc_response;
        break;
      }

      // required string enc_response = 20;
      case 20: {
        if (tag == 162) {
         parse_enc_response:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_enc_response()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->enc_response().data(), this->enc_response().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "enc_response");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_ip;
        break;
      }

      // required string ip = 21;
      case 21: {
        if (tag == 170) {
         parse_ip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ip().data(), this->ip().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ip");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(178)) goto parse_funcid;
        break;
      }

      // required string funcid = 22;
      case 22: {
        if (tag == 178) {
         parse_funcid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_funcid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->funcid().data(), this->funcid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "funcid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(186)) goto parse_counterType;
        break;
      }

      // required string counterType = 23;
      case 23: {
        if (tag == 186) {
         parse_counterType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_countertype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->countertype().data(), this->countertype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "countertype");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Trade.TradeLog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Trade.TradeLog)
  return false;
#undef DO_
}

void TradeLog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Trade.TradeLog)
  // required string sysNo = 1;
  if (has_sysno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sysno().data(), this->sysno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sysno");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sysno(), output);
  }

  // required string busiType = 2;
  if (has_busitype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->busitype().data(), this->busitype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "busitype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->busitype(), output);
  }

  // required string sysVer = 3;
  if (has_sysver()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sysver().data(), this->sysver().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sysver");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sysver(), output);
  }

  // required string account = 4;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->account(), output);
  }

  // required .Trade.TradeLog.LogLevel level = 5;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->level(), output);
  }

  // required string gatewayip = 6;
  if (has_gatewayip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gatewayip().data(), this->gatewayip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gatewayip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->gatewayip(), output);
  }

  // required string gatewayport = 7;
  if (has_gatewayport()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gatewayport().data(), this->gatewayport().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gatewayport");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->gatewayport(), output);
  }

  // required string gtip = 8;
  if (has_gtip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gtip().data(), this->gtip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gtip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->gtip(), output);
  }

  // required string gtport = 9;
  if (has_gtport()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gtport().data(), this->gtport().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gtport");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->gtport(), output);
  }

  // required string recvtime = 10;
  if (has_recvtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->recvtime().data(), this->recvtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "recvtime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->recvtime(), output);
  }

  // required string begintime = 11;
  if (has_begintime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->begintime().data(), this->begintime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "begintime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->begintime(), output);
  }

  // required int64 runtime = 12;
  if (has_runtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->runtime(), output);
  }

  // required string sendtime = 13;
  if (has_sendtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sendtime().data(), this->sendtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sendtime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->sendtime(), output);
  }

  // required string enc_request = 14;
  if (has_enc_request()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->enc_request().data(), this->enc_request().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "enc_request");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->enc_request(), output);
  }

  // required string request = 15;
  if (has_request()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->request().data(), this->request().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "request");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->request(), output);
  }

  // required int32 status = 16;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->status(), output);
  }

  // required string retcode = 17;
  if (has_retcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retcode().data(), this->retcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "retcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->retcode(), output);
  }

  // required string retmsg = 18;
  if (has_retmsg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retmsg().data(), this->retmsg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "retmsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->retmsg(), output);
  }

  // required string response = 19;
  if (has_response()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->response().data(), this->response().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "response");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->response(), output);
  }

  // required string enc_response = 20;
  if (has_enc_response()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->enc_response().data(), this->enc_response().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "enc_response");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->enc_response(), output);
  }

  // required string ip = 21;
  if (has_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->ip(), output);
  }

  // required string funcid = 22;
  if (has_funcid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->funcid().data(), this->funcid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "funcid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->funcid(), output);
  }

  // required string counterType = 23;
  if (has_countertype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->countertype().data(), this->countertype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "countertype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      23, this->countertype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Trade.TradeLog)
}

::google::protobuf::uint8* TradeLog::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Trade.TradeLog)
  // required string sysNo = 1;
  if (has_sysno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sysno().data(), this->sysno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sysno");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sysno(), target);
  }

  // required string busiType = 2;
  if (has_busitype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->busitype().data(), this->busitype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "busitype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->busitype(), target);
  }

  // required string sysVer = 3;
  if (has_sysver()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sysver().data(), this->sysver().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sysver");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sysver(), target);
  }

  // required string account = 4;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->account(), target);
  }

  // required .Trade.TradeLog.LogLevel level = 5;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->level(), target);
  }

  // required string gatewayip = 6;
  if (has_gatewayip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gatewayip().data(), this->gatewayip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gatewayip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->gatewayip(), target);
  }

  // required string gatewayport = 7;
  if (has_gatewayport()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gatewayport().data(), this->gatewayport().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gatewayport");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->gatewayport(), target);
  }

  // required string gtip = 8;
  if (has_gtip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gtip().data(), this->gtip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gtip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->gtip(), target);
  }

  // required string gtport = 9;
  if (has_gtport()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gtport().data(), this->gtport().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gtport");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->gtport(), target);
  }

  // required string recvtime = 10;
  if (has_recvtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->recvtime().data(), this->recvtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "recvtime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->recvtime(), target);
  }

  // required string begintime = 11;
  if (has_begintime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->begintime().data(), this->begintime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "begintime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->begintime(), target);
  }

  // required int64 runtime = 12;
  if (has_runtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->runtime(), target);
  }

  // required string sendtime = 13;
  if (has_sendtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sendtime().data(), this->sendtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sendtime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->sendtime(), target);
  }

  // required string enc_request = 14;
  if (has_enc_request()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->enc_request().data(), this->enc_request().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "enc_request");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->enc_request(), target);
  }

  // required string request = 15;
  if (has_request()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->request().data(), this->request().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "request");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->request(), target);
  }

  // required int32 status = 16;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->status(), target);
  }

  // required string retcode = 17;
  if (has_retcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retcode().data(), this->retcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "retcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->retcode(), target);
  }

  // required string retmsg = 18;
  if (has_retmsg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retmsg().data(), this->retmsg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "retmsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->retmsg(), target);
  }

  // required string response = 19;
  if (has_response()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->response().data(), this->response().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "response");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->response(), target);
  }

  // required string enc_response = 20;
  if (has_enc_response()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->enc_response().data(), this->enc_response().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "enc_response");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->enc_response(), target);
  }

  // required string ip = 21;
  if (has_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->ip(), target);
  }

  // required string funcid = 22;
  if (has_funcid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->funcid().data(), this->funcid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "funcid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->funcid(), target);
  }

  // required string counterType = 23;
  if (has_countertype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->countertype().data(), this->countertype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "countertype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->countertype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Trade.TradeLog)
  return target;
}

int TradeLog::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Trade.TradeLog.LogLevel level = 5;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->level());
    }

    // required string sysNo = 1;
    if (has_sysno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sysno());
    }

    // required string busiType = 2;
    if (has_busitype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->busitype());
    }

    // required string sysVer = 3;
    if (has_sysver()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sysver());
    }

    // required string account = 4;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // required string ip = 21;
    if (has_ip()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ip());
    }

    // required string funcid = 22;
    if (has_funcid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->funcid());
    }

    // required string gatewayip = 6;
    if (has_gatewayip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gatewayip());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required string gatewayport = 7;
    if (has_gatewayport()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gatewayport());
    }

    // required string gtip = 8;
    if (has_gtip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gtip());
    }

    // required string gtport = 9;
    if (has_gtport()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gtport());
    }

    // required string counterType = 23;
    if (has_countertype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->countertype());
    }

    // required string recvtime = 10;
    if (has_recvtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->recvtime());
    }

    // required string sendtime = 13;
    if (has_sendtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sendtime());
    }

    // required string begintime = 11;
    if (has_begintime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->begintime());
    }

    // required int64 runtime = 12;
    if (has_runtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->runtime());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // required string enc_request = 14;
    if (has_enc_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->enc_request());
    }

    // required string request = 15;
    if (has_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->request());
    }

    // required int32 status = 16;
    if (has_status()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }

    // required string retcode = 17;
    if (has_retcode()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->retcode());
    }

    // required string retmsg = 18;
    if (has_retmsg()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->retmsg());
    }

    // required string response = 19;
    if (has_response()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->response());
    }

    // required string enc_response = 20;
    if (has_enc_response()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->enc_response());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TradeLog::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TradeLog* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TradeLog*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TradeLog::MergeFrom(const TradeLog& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_sysno()) {
      set_sysno(from.sysno());
    }
    if (from.has_busitype()) {
      set_busitype(from.busitype());
    }
    if (from.has_sysver()) {
      set_sysver(from.sysver());
    }
    if (from.has_account()) {
      set_account(from.account());
    }
    if (from.has_ip()) {
      set_ip(from.ip());
    }
    if (from.has_funcid()) {
      set_funcid(from.funcid());
    }
    if (from.has_gatewayip()) {
      set_gatewayip(from.gatewayip());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_gatewayport()) {
      set_gatewayport(from.gatewayport());
    }
    if (from.has_gtip()) {
      set_gtip(from.gtip());
    }
    if (from.has_gtport()) {
      set_gtport(from.gtport());
    }
    if (from.has_countertype()) {
      set_countertype(from.countertype());
    }
    if (from.has_recvtime()) {
      set_recvtime(from.recvtime());
    }
    if (from.has_sendtime()) {
      set_sendtime(from.sendtime());
    }
    if (from.has_begintime()) {
      set_begintime(from.begintime());
    }
    if (from.has_runtime()) {
      set_runtime(from.runtime());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_enc_request()) {
      set_enc_request(from.enc_request());
    }
    if (from.has_request()) {
      set_request(from.request());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_retcode()) {
      set_retcode(from.retcode());
    }
    if (from.has_retmsg()) {
      set_retmsg(from.retmsg());
    }
    if (from.has_response()) {
      set_response(from.response());
    }
    if (from.has_enc_response()) {
      set_enc_response(from.enc_response());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TradeLog::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TradeLog::CopyFrom(const TradeLog& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TradeLog::IsInitialized() const {
  if ((_has_bits_[0] & 0x007fffff) != 0x007fffff) return false;

  return true;
}

void TradeLog::Swap(TradeLog* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    std::swap(sysno_, other->sysno_);
    std::swap(busitype_, other->busitype_);
    std::swap(sysver_, other->sysver_);
    std::swap(account_, other->account_);
    std::swap(ip_, other->ip_);
    std::swap(funcid_, other->funcid_);
    std::swap(gatewayip_, other->gatewayip_);
    std::swap(gatewayport_, other->gatewayport_);
    std::swap(gtip_, other->gtip_);
    std::swap(gtport_, other->gtport_);
    std::swap(countertype_, other->countertype_);
    std::swap(recvtime_, other->recvtime_);
    std::swap(sendtime_, other->sendtime_);
    std::swap(begintime_, other->begintime_);
    std::swap(runtime_, other->runtime_);
    std::swap(enc_request_, other->enc_request_);
    std::swap(request_, other->request_);
    std::swap(status_, other->status_);
    std::swap(retcode_, other->retcode_);
    std::swap(retmsg_, other->retmsg_);
    std::swap(response_, other->response_);
    std::swap(enc_response_, other->enc_response_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TradeLog::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TradeLog_descriptor_;
  metadata.reflection = TradeLog_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Trade

// @@protoc_insertion_point(global_scope)
